[{"title":"千元机真的就不行吗 ？--OPPOA9的四年使用体验和优化思路","path":"/2024/02/25/OPPOA9的四年使用体验/","content":"高考后的某一天，经过一家手机店时我妈突然问我要不要换手机，我有点没反应过来回答要（那时的我会刷一些科技美学的视频，知道线下机特别是 OPPO 和 VIVO 会比较坑，所以我在纠结要不要在网上买手机）。一进店就被店员热情的“招待”，并使劲推销她手上的这款 OPPOA 9。我问店员有没有小米卖，店员一脸嫌弃的说小米不好用啊等等，但还是拿出了当时的新品红米 note 7 Pro。本来我是打算买小米的，但她突然说：“哎呀，小米的这款只有 4+128，oppo 的这款有 6+128，内存大一点的肯定要用得久一些啊”。年少的我竟然被她一系列的话术忽悠了，最终买了这款搭载 Helio P 70，出厂系统 ColorOS 6，6+128 GB 的 OPPOA9。 已经忘了当时是 note7 还是 note7Pro 了 刚买的几天我真是后悔莫及，感觉自己被坑死了，配置完全抵不过红米 note 7 Pro，ColorOS 更是被 MIUI 全方位吊打，又不能 root，可玩性几乎没有。但随着系统的更新，我对它开始有了不一样的看法。 🤔使用体验：外观见仁见智，那些年感觉都挺流行这种渐变色，虽然是塑料背板，但手感却意外不错。拍照嘛，扫个二维码还是没啥问题。先说优点，系统维护非常不错，从 ColorOS 6 到 ColorOS 11 两个安卓大版本的更新使它改头换面（千元机也只有绿厂维护得最好了吧[阴险]）。整体的设计语言非常统一简洁，各个小功能也做得很有模有样，小窗，识屏，侧边栏应有尽有，系统稳定，各个功能设置简单不复杂。对于普通使用者非常友好。 19 年 4 月发布，更到 21 年末，更了两年半 再说缺点（对于重度使用者来说），和我后面买的 Matepad 11 鸿蒙 OS 3 做对比，第一，登录微软邮箱只能同步日历，鸿蒙能同步微软便签甚至 To do，真的是非常 Amazing 啊！第二，自带文件浏览不能直接访问 data 文件夹！也不能收藏文件夹，不能访问局域网内设备文件，但鸿蒙可以。第三，电脑协同几乎没有，得靠第三方软件。第四，没有红外，不知 OPPO 咋想的，小米全系红外，OPPO 没有一台有红外。 👀优化思路：1.尽量少安装软件，能用网页，小程序代替的功能就不要用软件。之前有段时间非常喜欢在酷安上搜寻各种应用集，每当发现一个有趣的软件就会产生一种找到宝藏的快感。但其实我们使用手机 80%的时间在 20%的软件上。2.能安装国际版就不要安国内版，国际版的软件大多都“小而美”[阴险]3.尽量不安装不知名未上架的软件，包括 XX 影院，XX 音乐等。此类软件虽然能免费观看电影资源，但做工粗糙，界面和交互都一言难尽并且经常会跳牛皮藓广告。4.尽量少安装需长期挂后台，要无障碍的软件。每次开关机都要重新授权一次无障碍真的麻烦，像钱迹这类不容易掉无障碍的软件就值得表扬。5.尽量使用有全平台的软件，尽量使用数据可导出，可备份在自己网盘的软件，以防跑路。6.老年模式 yyds，优质插件 yyds。7.美化：会话微件（小部件种类多，高斯模糊效果，自定义化高，耗电量低）+自带 ART+图标（简洁好看。个人喜欢扁平的图标包，没适配的图标看起来也不会突兀）+OPPOSans 最粗（粗体会带来更多的安全感）+森林集输入法皮肤。负一屏放扫一扫，付款码，很实用。 桌面布局 😋长期使用应用篇 ：👍🏻系统应用：1.Breeno 指令：每周定时打开百度网盘备份相册（自带云空间太小）。2.家庭空间：远程协助，实时位置，安全事件，健康数据，不管是帮助老人还是限制小孩游玩时间都十分好用。 功能设置 3.专注模式：配合 Breeno 指令能做到晚上定时强制锁机，不能取消的那种（无所谓，电脑会出手)。 👍🏻优雅的使用：1.网易云音乐极速版：官方出品，秒开。原版臃肿不堪，每次打开都要反应两三秒，想随时听歌的我忍无可忍！2.知了，哔哩哔哩漫游：两款插件，我用它们把推荐和牛皮藓的广告全关了。其实如果平台有好的内容我也会用原版，开会员支持，但无意义的按键和广告实在是太多了！3.百度贴吧 lite：第三方软件，简洁好用但不能发帖和评论。 非常简洁 👍🏻购物：支付宝，淘宝，平多多，京东，咸鱼，老人模式 yyds。喵喵折，识货，阿里巴巴用来捡便宜，打辅助。 各家老人模式 👍🏻搜狗输入法：能直接输入表情包至 QQ 和微信，这样就避免了 QQ 微信表情包不互通的情况了。就这一个功能让我选择了它。 皮肤：森林集 其他输入法：1.Gboard，手感独一档，能让这么差的马达也能体验到非常好的震动，不知道怎么做到的。但因表情包，剪贴板，同步等问题放弃了。2.各大输入法定制版，UI 界面高度匹配系统 UI，手感不错，表情包等功能垃圾。 ❤️一个木函：图片拼接，取色配色，应用管理等等小功能，直接替代了拼图酱，色采，unknown 等一系列小工具软件。看家必备。 ❤️ES 文件浏览器：能访问 data 文件夹，收藏文件夹，备份文件夹到百度云，主要用来访问 QQ 文件夹，功能齐全，缺点就是广告太多！可用修改版或支持正版 99终身。 ❤️海阔视界：免费音乐，电影，漫画，小说，壁纸，聚合神器。它的特点是无广告，和阅读类似，需要自己制作或寻找源，神中神。 👍🏻笔记清单：1.To do：Microsoft 全家桶，全平台，简洁好用！2.OneNote：Microsoft 全家桶，电子笔记都整理在里面了，移动端还可查看便签等内容。使用体验可单开一章。3.人升：Material You 设计，用游戏化的数值来激励自己养成良好习惯。4.微信读书：书架上放了很多待看的书，时不时的翻一翻陶冶情操，免费简洁。5.你的日记：有空时写写日记，还能看到对方的日记，对有倾诉欲的文艺青年还不错，里面人都挺正常，缺点是不能导出数据，太可怕了。 👍🏻其他：1.SD Maid：自带的管家不能清理干净，所以必备一个清理软件。曾经用过：极客清理，猎豹清理大师，清浊，文件极客。2.夸克：磁力离线下载，不过现在动不动就和谐，88 会员也不顶用了。 🫠总结 ：在某一次逛 OPPO 主题商店的时候，看到作者的介绍有酷安，便吸引来到了这里。那时的我真是刘姥姥进大观园。功能不一的软件，五花八门的玩机技巧，美化技巧，让我发现搞机是如此有趣的事。 但随着时间的流逝，仿佛我的大学生活一样，这些热情和蛮劲也在慢慢消失。 从大一到大四，身边的小伙伴一个个都换了手机（我室友用的红米 note 7 Pro 也换了 k 40），再看看手上这部陪伴我三年半却依然坚挺的老伙计，用了这么长时间有时也会出现莫名奇妙的问题，掉帧什么的也无所谓了，幸亏我不怎么玩游戏（王者最低画质也能玩），和我妈新买的 OPPO K 10 对比有明显的卡顿，但自己用的时候也没怎么在意，它也并没有大家说的那么难堪，又想起了我把买的 VIVO Y 系列，也用了三年，比他之前被忽悠买的小米 play 用得久多了，只能说各自有各自的需求罢。 之前特别喜欢 MIUI，但后来看过各种案例，也慢慢失去了兴趣，我目前心目中的排名是鸿蒙 OS＞ColorOS＞橘子和 MIUI（其实后两者没深度用过），在我看来，ColorOS 兼顾稳定和简洁，又有着不太坑的千元价位的机子，所以现在我家里都换了 OPPO。 它并不是那么完美，初次见面我甚至非常嫌弃（多年后我才反应过来，店员那时说后台没有这款机子了，所以我手上的这部还是展示机[撇嘴]）。但就像人一样，陪伴是最长情的告白（画风不对了欸）。 Matepad 11 渣画质拍摄 所以，珍惜你身边的的人和手上的机吧！","tags":["使用体验","旧机博物馆","玩机技巧","ColorOS"],"categories":["生活"]},{"title":"模板文章","path":"/2024/02/25/模板文章/","content":"Front-matter 模板，同时也是 Hello-world。此篇文章头图由网络搜索，加载会变慢。希望能在新的领域有不同的体验。","tags":["模板"],"categories":["模板"]},{"title":"数学建模学习进程","path":"/2024/02/25/数学建模学习进程/","content":"分工 ：每个队员需全能，但要注重侧重点。分工有交叉，且能随着具体情况发生改变。如果队员只专注于自己的领域容易出现张口就来的情况，沟通时向另一板块负责人提出不合理的要求，难以沟通。 建模 ：精通各种模型并善于使用。对问题的解决思路、方法。数学模型（姜启源）（经典）（群文件里）。数学建模算法与应用（群文件）相当于工具书性质，想用什么算法和建模可以去找，有详细解释。 编程 ：熟练的通过各类软件对模型进行模拟、求解、检验。&#x3D;&#x3D;Matlab，Python，SPSS，Lingo。&#x3D;&#x3D;一小时速成matlab： https://www.bilibili.com/video/BV1hE411Q7T4 论文 ：对团队的前进方向有清晰的把握，通过准确的文字、图标对模型进行展示。&#x3D;&#x3D;Word（论文排版），Excel（表格），Mathtype（编辑公式的小工具），Visio（流程图）。&#x3D;&#x3D;&#x3D;&#x3D;Office Tool Plus&#x3D;&#x3D;官网： https://otp.landian.vip/zh-cn/ （下载和激活office的，记得必看新手教程，安装激活教程）&#x3D;&#x3D;Word排版技巧&#x3D;&#x3D;： https://www.bilibili.com/video/BV13y4y1Y7REWord排版技巧2： https://www.bilibili.com/video/BV1Tx411178u如何用word做三线表： https://jingyan.baidu.com/article/e75aca85351bb6142edac622.html历年优秀论文：群文件（包含2001AB，2007B，2010B，2012–2020）（多看必看） 论文格式注意事项 ：摘要 600到800字 与关键字成一页三线表 宽度与页面宽度成黄金比例一句话一般不单独成段图片名字字体为黑体，且比正文小一号尽量用短句，避免表述歧义正文和附录不能出现姓名及相关信息等 其他链接 ：（未经筛选，建议浏览）Office教程网： https://www.office26.com/知乎张浩驰： https://www.zhihu.com/people/haochizhang （大佬）数学建模清风——论文排版教程： https://www.bilibili.com/video/BV1Ci4y1c7Ld 说明 ：拿到一个问题，可以先建立一个初等模型，讨论下结果；再逐渐放宽条件，把模型做的复杂一点。1.所需软件和书籍群文件里都有，若缺资源可@我。（鉴于资料有些多和杂了，所以只留了些重要的在上面）2.教程都是本人筛选过了的无废话的教程。（不能再简单了）3.合理使用搜索引擎。如遇问题请&#x3D;&#x3D;百度，B站，知乎&#x3D;&#x3D;。实在解决不了可以发出来。学校图书馆可以用知网查参考论文重庆理工大学 MATLAB 安装指南 (weixinhost.com)4.多讨论，有什么想法可以讨论，对分工有问题（比如不清楚自己应该做什么）可讨论。5.关于群文件的说明： 1. 全员配备Word。由于WPS和Word有不兼容的情况，而论文严格要求格式，且WPS上限无Word高，所以选择Word。 2. 安装office tool plus 时应仔细查看网站的教程，只要一步一步跟着教程，一般是没有问题的。 3. Visio，mathtype这两个软件是非常容易上手的，且和word联动效果很好。建议随便找一两个相关视频看看就完事。无需推荐。（之所以使用mathtype而不用word自带的公式编辑器，是因为mathtype的字体是论文所需要的，而自带的不是） 4. 之所以用了学校培训外的一些软件，是因为我发现学校的培训全是关于建模和编程的，而写作的部分只涉及到写作规则，没有涉及到写作教程。我想原因是写作教程太杂了。但&#x3D;&#x3D;写作&#x3D;&#x3D;确实占成绩中很大一部分（也是很容易被忽视的一部分），所以这一块需要我们自己去努力。去了解使用word的一些小技巧，配合visio，mathtype，等等一些小工具去完成论文。6.暂时分组：.主建模编程，全局统筹.主论文格式 包括画图和公式.辅建模编程 论文结构摘要1.问题重述（背景介绍、文献综述、问题重述等）2.问题分析（主要对问题进行一定的分析，可以做一个分析流图）3.问题假设（其实也就是对问题的边界进行划定，我们需要让问题更具体一些）4.符号说明（对于文章中主要出现的符号进行一定的解释，方便评委老师理解）5.模型建立与求解（这一步最为核心，即数学建模和模型的求解部分）6.灵敏度分析（即分析模型的输出，对参数或环境变化的敏感程度的分析）7.模型的推广及优缺点（主要对模型的进一步研究分析和优缺点解释）参考文献附录 注意后续更新……","tags":["学习","技术分享"],"categories":["技术分享"]},{"title":"Tsjflm服务器简介","path":"/2023/06/15/Tsjflm服务器简介/","content":"服务器参数 ：版本：1.20 纯净版地址：群内有端口：25565到期时间：2024-06-11 07:41:16正版验证：正版盗版皆可可同时在线人数：4-5 人开服时间：每天 2：30关服，4 ：00备份，6 ：00开服难度：困难，无死亡不掉落 下载：电脑端： PCL2 启动器 HMCL 启动器 其他启动器请百度移动端： Java 版：安卓和iOS怎么玩Minecraft Java版? （移动端要自己折腾一会儿🫥） 基岩版下载地址：苦力怕论坛（暂未打开基岩版插件，如有此类玩家请私聊服主） 登录 ：123/register 密码 确认密码/login 密码/exchangepassword 旧密码 新密码 确认新密码 第一次注册登录会有一小段时间保护，无法破坏方块，再次登录则不会。建议密码不宜过长且容易记住 Tips ：极力推荐整合包：XPlus基础整合（很奇怪，服主用此整合包后帧率直线上升）如遇 bug @服主，有什么想法可在群内讨论，尽情游玩加入我的koko频道晚上一起开荒！koko频道 扫描下方二维码即可加入我们。群里超好玩的😎。","tags":["我的世界服务器","Minecraft"],"categories":["生活"]},{"path":"/about/index.html","content":"关于我本站 🤔一位神秘男子。👻随着网站的完善会释放更多的信息。👀左下角菜单栏底部是我的社交账号。🤗网站初建，欢迎各位留言添加友链。或者扫描左方的二维码加我 QQ。 建站缘由想要一片可以自由分享的小天地。从大学开始接触到计算机以后，便一直使用 OneNote 来记录学习笔记。虽然它非常好用，但是使用得越久也越发觉得它非常难用（废话文学）。期间看过很多笔记软件的测评，obsidian，notion，有道云笔记等等。只有 obsidian 深得我心。我认为，一个好的软件至少满足以下两个条件：数据能掌控在用户手里，数据尽可能通用，用户迁移成本低。提供更多的 api，维持好的插件社区氛围，这样才能发挥人民群众的智慧。在这两个条件下我直接 pass 了非常火的 notion，选用 obsidian。但是这样文章分享就变得麻烦了，所以，此站诞生了！前记在 Zhink 几天的折腾下，终于让小站跑起来了。目前小站内容较少，希望在以后的努力下，会更加完善。网站更新计划可看主页。本站搭建所使用项目如下，非常非常感谢以下项目的支持：HexoStellarGithub PagesGitee PagesWalineZeabur腾讯云对象存储本博客所有文章除特别声明外，均采用 CC BY-NC-SA 4.0 许可协议，转载请注明出处。本站始建于 2023 年 6 月。正在改善维修中。"},{"title":"整体设计","path":"/wiki/Cat-dog-identification/index.html","content":"摘要本文介绍了通过 Python 应用卷积神经网络算法和数字图像处理相关技术实现猫狗识别的方法，并利用 Tkinter 模块编写了猫狗图像识别程序的 GUI。通过多次重复测试，反复训练，得到一个较好的模型，识别正确率达到一个可观的程度。本小组在此过程中学习了卷积神经网络算法的原理，了解了计算机视觉处理图片的过程。 实验原理卷积神经网络卷积神经网络是一类包含卷积计算且具有深度结构的前馈神经网络，是深度学习的代表算法之一。仿造生物的视知觉机制构建，可以进行监督学习和非监督学习，其隐含层内的卷积核参数共享和层间连接的稀疏性使得卷积神经网络能够以较小的计算量对像素进行学习、有稳定的效果且对数据没有额外的特征工程要求。卷积神经网络是在前馈神经网络的隐藏层做的改变，它的隐藏层包括卷积层、池化层、全连接层三部分。 输入层：卷积神经网络的输入特征需要进行标准化处理。在将学习数据输入卷积神经网络前，需将分布于 [0，255] 的原始像素值归一化至 [0，1] 区间。输入特征的标准化有利于提升卷积神经网络的学习效率和表现。 卷积层（包含有卷积核、卷积层参数、激励函数）：卷积层的功能是对输入数据进行特征提取，其内部包含多个卷积核，组成卷积核的每个元素都对应一个权重系数和一个偏差量。卷积核在工作时，会有规律地扫过输入特征，在区域内对输入特征做矩阵元素乘法求和并叠加偏差量。 卷积层参数包括卷积核大小、步长、填充。卷积核越大，可提取的输入特征越复杂。步长定义了卷积核相邻两次扫过特征图时位置的距离。随着卷积层的堆叠，特征图的尺寸会逐步减小。为此，填充是在特征图通过卷积核之前人为增大其尺寸以抵消计算中尺寸收缩影响的方法。常见的填充方法为按0填充和重复边界值填充。 激励函数卷积层中包含激励函数以协助表达复杂特征，类似于其它深度学习算法，卷积神经网络通常使用线性整流函数（Rectified Linear Unit, ReLU）。 池化层：在卷积层进行特征提取后，输出的特征图会被传递至池化层进行特征选择和信息过滤。池化层包含预设定的池化函数，其功能是将特征图中单个点的结果替换为其相邻区域的特征图统计量。池化层选取池化区域与卷积核扫描特征图步骤相同，由池化大小、步长和填充控制。两者最大区别在于卷积核的不同（池化是一种特殊的卷积过程）。最大池化层就是在缩放图片，减少参数。 全连接层：卷积神经网络中的全连接层等价于传统前馈神经网络中的隐含层（每个神经元与上一层的所有神经元相连）。全连接层位于卷积神经网络隐含层的最后部分，并只向其它全连接层传递信号。特征图在全连接层中会失去空间拓扑结构，被展开为向量并通过激励函数。全连接层的作用则是对提取的特征进行非线性组合以得到输出，即全连接层本身不被期望具有特征提取能力，而是试图利用现有的高阶特征完成学习目标。 输出层：卷积神经网络中输出层的上游通常是全连接层，因此其结构和工作原理与传统前馈神经网络中的输出层相同。在图像识别中，输出层直接输出识别结果。 实验内容导入所需要的各种包123456789101112131415from keras.models import Sequentialfrom keras.layers import Conv2Dfrom keras.layers import MaxPool2Dfrom keras.layers import Densefrom keras.layers import Flattenfrom keras.optimizers import SGDfrom keras.preprocessing.image import ImageDataGeneratorfrom keras.models import load_modelimport tensorflow as tfimport tkinterimport tkinter.filedialogimport numpy as npfrom PIL import Image, ImageTk Keras 是一个由 Python 编写的开源人工神经网络库，可以作为 Tensorflow 的高阶应用程序接口，进行深度学习模型的设计、调试、评估、应用和可视化。TensorFlow是一个基于数据流编程（dataflow programming）的符号数学系统，被广泛应用于各类机器学习（machine learning）算法的编程实现。Tkinter 模块(“Tk 接口”)是 Python 的标准 Tk GUI 工具包的接口。 定义并训练网络神经网络模型模型定义123456789101112131415def define_cnn_model(): model = Sequential() # 卷积层 model.add(Conv2D(32, (3, 3), activation=&quot;relu&quot;, padding=&quot;same&quot;, input_shape=(200, 200, 3))) # 最大池化层 model.add(MaxPool2D((2, 2))) # 池化窗格 # Flatten层 model.add(Flatten()) # 全连接层 model.add(Dense(128, activation=&quot;relu&quot;)) # 128为神经元的个数 model.add(Dense(1, activation=&quot;sigmoid&quot;)) 首先创建一个 Sequential 模型（Keras 中的一种神经网络框架，可以被认为是一个容器，其中封装了神经网络的结构）。添加一个卷积层，卷积核的数量32，大小为3*3，激活函数类型为线性整流函数，填充模式为0填充，输入图片是200*200的彩色图片。再添加一个池化层，窗格的大小为2*2。再添加一个 Flatten 层，将池化后的结果展开；再添加一个全连接层，神经元个数为128；最后再添加一个全连接层输出结果，因为结果只需判断猫狗，神经元个数为1。最后用随机梯度编译模型。 例化模型并训练1234567891011121314def train_cnn_model(): model = define_cnn_model() # 创建图片生成器 datagen = ImageDataGenerator(rescale=1. / 255) train_it = datagen.flow_from_directory( &quot;./train/&quot;, class_mode=&quot;binary&quot;, batch_size=64, target_size=(200, 200)) # 训练模型 model.fit_generator(train_it, steps_per_epoch=len(train_it), epochs=5, verbose=1) model.save(&quot;my_model.h5&quot;) 首先实例化模型，接着创建图片生成器：将分布于 [0，255] 的原始像素值归一化至 [0，1] 区间，一次传入64张图片，并将图片缩放为200*200。然后再训练模型，这里有一个重要参数 epochs，设置为5，说明传入的图片学习5次。这样的重复学习，可以有效提高进度，但是当值比较大时，会非常耗时。最后将训练好的模型保存到项目文件夹下。 编写 GUI 代码用来实现猫狗图像识别GUI 主程序1234567891011121314151617181920212223# 生成tk界面 app即主窗口app = tkinter.Tk()# 修改窗口titileapp.title(&quot;猫狗识别程序&quot;)# 设置主窗口的大小和位置app.geometry(&quot;800x400&quot;)# 选择模型的按钮buttonSelm = tkinter.Button(app, text=&#x27;选择模型&#x27;, command=choosemod, bg=&#x27;#F9FBFC&#x27;) buttonSelm.place(x=50, y=125, height=50, width=100)# 选择图片的按钮buttonSelImage = tkinter.Button(app, text=&#x27;选择图片&#x27;, command=choosepic, bg=&#x27;#F9FBFC&#x27;) buttonSelImage.place(x=50, y=225, height=50, width=100)# 运行的按钮buttonSely = tkinter.Button(app, text=&#x27;运行&#x27;, command=run, bg=&#x27;#F9FBFC&#x27;) buttonSely.place(x=50, y=325, height=50, width=100)# 图片显示框lableShowImage = tkinter.Label(app, bg=&#x27;#FAF5E1&#x27;) lableShowImage.place(x=225, y=125, height=250, width=350)# 结果框var = tkinter.StringVar() # 储存文字的类var.set(&quot;等待结果&quot;) # 设置文字msg = tkinter.Label(app, textvariable=var, relief=&quot;sunken&quot;, bg=&#x27;#F9FBFC&#x27;) msg.place(x=650, y=325, height=50, width=100) 引用 tkinter 包生成主窗口。定义三个布局，分别是选择模型按钮，选择图片按钮，运行程序按钮，图片显示框，识别结果显示框和说明。分别定义显示内容的大小和位置。将 GUI 程序置于主循环中，除非用户关闭，否则程序始终处于运行状态。 选择模型和选择图片函数123456789101112# 选择并显示图片def choosepic(): global patht patht = tkinter.filedialog.askopenfilename() img_open = Image.open(patht) img = ImageTk.PhotoImage(img_open) lableShowImage.config(image=img) lableShowImage.image = img# 选择模型def choosemod(): global pathmod pathmod = tkinter.filedialog.askopenfilename() 用 filedialog.askopenfilename 函数选择图片文件地址和模型文件地址，最后图像将其保存到 lableshowimage 类下。 运行图像识别程序12345678910111213141516def run(): model_path = pathmod model = load_model(model_path) pil_im = Image.open(patht, &#x27;r&#x27;) # 首先更改图片的大小 pil_im = pil_im.resize((200, 200)) # 将格式转为numpy array格式 array_im = np.asarray(pil_im) # array_im = array_im.resize((4,4)) array_im = array_im[np.newaxis, :] # 对图像检测 result = model.predict([[array_im]]) if result[0][0] &gt; 0.5: var.set(&quot;狗&quot;) else: var.set(&quot;猫&quot;) 首先加载模型，然后读取图片，更改图片的大小并转换为 array 格式，最后用 model 包下的 predict 函数对图像进行检测。 系统调试运行程序由图程序成功运行。 误差测试我们运行程序20次，人工判定程序识别的结果正确性，测出正确率为72.3%。更改学习次数为6，重新训练模型得到正确率为82.1%，更改学习次数为7，重新训练模型得到正确率为85.1%。由此可得，卷积神经网络学习次数越多，图片识别正确率越高。 总结因为时间和硬件限制，所以我们训练模型和测试正确率的次数有限。本项目也可以添加卷积层，池化层，和添加学习次数来增加模型精确度。当然测试对象也不限制于猫和狗，如果有其他物体的大数量的测试集（因为猫狗数据集好找，所以只做了猫狗），也可以修改输出层神经元个数，来得到对应的测试程序。最后打包成 exe 文件，得到成品。"},{"title":"使用说明","path":"/wiki/TranslateGUI/index.html","content":"1、功能说明本工具主要用于配置文件和CID的翻译。 翻译文件模式分三种：35kv配置文件，110kv配置文件，CID。 翻译语言模式分两种：英文，英文和俄文。 程序会自动识别表格的中文，英文，英文缩写，简洁缩写（英文简写），俄文，俄文缩写，俄文简写这些列下面的内容。 程序会根据各列的内容进行优先级判断，如果有英文缩写列且英文缩写列下面有内容，则先用英文缩写列优先翻译。 优先级如下： 简洁缩写（英文简写） &gt; 英文缩写 &gt; 英文 俄文简写 &gt; 俄文缩写 &gt; 俄文 2、使用说明2.1、打开软件1.解压压缩包，双击文件目录下的main.exe。 也可创建快捷方式到桌面打开。 2.2、导入文件1.点击按钮打开文件选择框。 2.选择词条对照表，点击打开。 3.此时报告框显示日志，即选择成功。 4.同理选择其他文件。 如果翻译35kv： ​\t表格选择：语言词条对照表.xlsx ​\t文件1选择：language.txt 如果翻译CID： ​\t表格选择：语言词条对照表.xlsx ​\t文件1选择：device.cid 如果翻译110kv： ​\t表格选择：语言词条对照表.xlsx ​\t文件1选择：appdict.xml ​\t文件2选择：sysdict.xml 2.3、开始翻译1.选择完毕后。点击开始翻译按钮。 2.翻译完毕后会生成结果。 35kv配置文件和110kv配置文件： 在原词条对照表目录下生成一个未翻译.xlsx，且会猜测其未翻译原因，内容如图： 且会在原表标记： CID文件： 在device.cid目录下生成目标文件：device-en.cid。 和一个未翻译词条文件（也是device-en.cid中残留的中文词条）：device-en未翻译.txt。 2.4、最后处理未翻译词条可以新建一个表并将其加进去，重新运行程序或者手动翻译。 翻译完后对比前后翻译文件，下载到装置自测试。 3、TODO1.检查CID表格和其他表格的差异。"},{"title":"友链","path":"/friends/index.html","content":"暂无。"},{"title":"整体设计","path":"/wiki/Laser-Ranging-system/index.html","content":"摘要本文介绍了以 STC12C5A60S2单片机为核心、以 TOF10120激光测距传感器模块为距离传感器的一种低成本、高精度、微型化的激光测距仪。该测距仪采用了相位法激光测距，将测得的结果经计算转换反馈到 LCD1602屏上，从而实现测距功能。激光测距仪，是利用激光对目标的距离进行准确测定的仪器。激光测距仪在工作时向目标射出一束很细的激光，由光电元件接收目标反射的激光束，计时器测定激光束从发射到接收的时间，计算出从观测者到目标的距离。本文的激光测距仪是一维的激光测距仪，用于距离测量、定位。 模块介绍激光测距模块原理 ：由激光发射器发射一束激光。经过分光镜后一束射向前方反光镜后，有信号接收器A接受，另-束直接由信号接收器B接收，两个信号接收器与激光发射器处于同一平面上。通过示波器观察出两束光波的相位变化，得到两束光接收到的时间差，通过计算算得激光发射器与反光镜的距离。 STC12C5A60S2单片机 ：STC12C5A60S2系列单片机是单个时钟&#x2F;机器周期(1T)的单片机，是指令代码完全兼容传统的8051单片机,是新一代高速&#x2F;低功耗&#x2F;超强抗干扰的8051单片机，速度却快8051 8-12倍。在内部集成了MAX810复位电路、2路PWM、8路高速、10位A&#x2F;D转换(250K&#x2F;S),，对于电机的控制有着出色的表现，适合于强干扰场合。 LCD1602液晶显示基本原理 ：点阵图形式液晶由 M&amp;N 个显示单元组成，假设 LCD 显示屏有64行，每行有128列，每8列对应1字节的8位，即每行由16字节，共16×8&#x3D;128个点组成。显示屏上64x16个显示单元与显示 RAM 区的1024字节相对应，每一字节的内容与显示屏上相应位置的亮暗对应。例如显示屏第一行的亮暗由 RAM 区的000H-00FH 的16字节的内容决定，当(000H) &#x3D;FFH 时，屏幕左上角显示一条短亮线，长度为8个点;当(3FFH)&#x3D;FFH 时，屏幕右下角显示一条短亮线;当(000H) &#x3D;FFH，(001H) &#x3D;00H，(002H)&#x3D;00H，(00EH)&#x3D;00H，(00FH)&#x3D;00H 时，在屏幕的顶部显示一条由8条亮线和8条暗线组成的虚线。这就是 LCD 显示的基本原理。 系统设计系统总体设计本系统由激光测距模块 TOF10120，最小系统核心板 STC12C5A60S2单片机，显示模块 LCD1602构成。由 TOF10120采集数据，通过 I2C 将数据传输到 STC12C5A60S2，STC12C5A60S2将数据进行处理，通过 LCD1602显示出实时距离。 硬件设计激光测距模块选用 TOF10120，TOF10120是一款比较常用的近距离测距传感器，精度相对较高，价格也相对亲民。它的通信有两种方式，分别是 I2C 和 UART。由于 I2C 接口能够用软件模拟来扩充接口，灵活性高等原因，所以本次设计选用 I2C 来进行数据通信。显示模块依然选用经典的 LCD1602，处理系统则选用51单片机 STC12C5A60S2来实现。电路原理图如图所示： 软件设计LCD1602模块：此次显示的模式为静态显示。首先定义好 LCD 的忙检测函数，显示字符前需检测 LCD 的状态。再定义写字符函数，用来向 LCD 写入指令或数据，注意写字符函数里的语句适当加上延时函数，等待语句的处理。然后定义 LCD 的光标移动函数和显示字符串函数，通过光标移动函数可以设置字符显示在 LCD 的具体位置，通过显示字符串函数可以输出想要的字符串。最后向 LCD 写入指令来对 LCD 进行初始化。 TOF10120模块：通过I2C来与单片机进行数据通信。所以需要编写的程序主体为I2C的处理程序。首先需要编写I2C总线初始化函数释放I2C总线的数据线和时钟线，再编写I2C总线的起始信号、停止信号、接收应答信号函数以备用。根据I2C写入和读取的正确时序来编写向I2C总线写入字节数据和从I2C总线读取字节数据的函数。因为TOF模块在单片机访问中有具体的数据地址，所以最后编写向任意地址写入一个字节数据和从任意地址读取一个字节数据的函数来与TOF进行数据通讯。 主程序模块： 首先对 LCD、I2C 和串口进行初始化。再在 LCD 上显示提示字符和单位。向串口写指令来对 TOF 进行设置，选择数据发送模式为模块发送。当接受标志位为1时向串口接收两个字节的数据，通过适当换算得到字符数组通过 LCD 显示出来。 系统实现Keil 编写程序在 Keil 里选择 AT89C51芯片，引入其库函数。编写好程序，查错 debug，检查语法错误，最后编译程序。生成 HEX 文件。 Proteus 仿真由于 Proteus 无激光测距模块，所以用 SFR04代替。 实物连接和 STC-ISP 下载调试照 Proteus 仿真图将实际器材连接完毕，用两根 USB 线连接51核心板和电脑，通过 STC-ISP 将程序烧录至 STC12C5A60S2单片机。将 TOF10120带盖玻片面对着不同距离的阻碍物体，观察 LCD1602所示数据。 系统调试通过编译程序检测程序是否有语法错误。通过 Keil 的 debug 功能查看每一步的运行结果，检查程序的非语法错误。通过在 Proteus 的仿真查看仿真结果。通过 STC-ISP 烧录程序根据实物上的显示效果来进行最终调试。 遇到的问题一：烧录不进代码，STC-ISP一直处于连接中，原因是烧录过程中单片机的P3口不能接任何器件，由于设置的I2C串口在P3上，所以一直没烧上，通过网络搜寻解决。 遇到的问题二：LCD只亮不显示字符，原因是LCD没接地和供电。因为Proteus的LCD没接地和供电能显示字符，加上对LCD的工作原理不大清楚导致。 遇到的问题三：LCD只能显示一次数据，不能随TOF测距大小变化而变化，原因是没有正确写好接受数据标志位的状态。 遇到的问题四：LCD显示乱码，数值能随TOF所测距离增大而增大，但却不能显示正确数值，原因是处理TOF所传入的两字节数据方法有错。最后恶补了C语言处理数据的方法解决。 以上问题都是因为不熟悉 LCD 显示原理，TOF 传输数据形式，数据字符转换，Keil 的 debug 功能等知识所导致的，经过这次课程设计很好的学习到这些知识，也对单片机应用系统的设计方法有了一个清晰的认识，能自主解决所遇到的问题。‌"},{"title":"整体设计","path":"/wiki/Video-GUI/index.html","content":"待更新Loading…"}]